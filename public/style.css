html, body {
    margin: 0;
}

:root {
    --bg: #fdfdfd;
    --ink: #292a2b;

    --wait: yellow;
    --lightgray: rgb(238, 238, 238);

    --self: rgb(205, 223, 244);
    --opp: rgb(255 175 110);
}

body {
    background: var(--bg);
    color: var(--ink);
}
body.dragging, body.dragging * {
    cursor: grabbing !important;
}

#fixed-background {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    pointer-events: none;
}
#timer-background {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    pointer-events: none;
}
body.hit #fixed-background {
    border-top: 1px solid red;
    border-bottom: 1px solid red;
}
body.timer-active #timer-background {
    background: var(--ink);
    opacity: .1;
}

button {
    font-family: inherit;
    font-size: inherit;
    background-color: var(--bg);
    color: var(--ink);
    border: 1px dotted var(--ink);
    border-radius: 0;
    cursor: pointer;
    margin: 0;
    padding: .5em;
    position: relative;

    -webkit-touch-callout: none; /* iOS Safari */
      -webkit-user-select: none; /* Safari */
       -khtml-user-select: none; /* Konqueror HTML */
         -moz-user-select: none; /* Old versions of Firefox */
          -ms-user-select: none; /* Internet Explorer/Edge */
              user-select: none; /* Non-prefixed version, currently
                                    supported by Chrome, Edge, Opera and Firefox */
}
button:active,
button.locked,
button:disabled {
    border-style: solid;
}

button.locked,
button:disabled {
    cursor: default;
}
button:disabled {
    border-color: var(--ink);
}

/* imagebutton */

input {
    font-family: inherit;
    font-size: inherit;
}

input[type="text"] {
    border: none;
    border-bottom: 1px dotted var(--ink);
    background: var(--bg);
    border-radius: 0;
}
input[type="text"]:focus {
    border-bottom-style: solid;
}
input[type="text"]::placeholder {
    font-style: italic;
}

input[type="image"] {
    /* max-width: 300px;
    max-height: 300px; */
    width: auto;
    height: auto;
}

.imagebutton.character input[type="image"] {
    /* max-width: 150px;
    max-height: 200px; */
}

.imagebutton {
    position: absolute;
    display: flex;
    flex-direction: column;
    gap: .5em;
    pointer-events: none;
    translate: -50% -50%;

    -webkit-touch-callout: none; /* iOS Safari */
      -webkit-user-select: none; /* Safari */
       -khtml-user-select: none; /* Konqueror HTML */
         -moz-user-select: none; /* Old versions of Firefox */
          -ms-user-select: none; /* Internet Explorer/Edge */
              user-select: none; /* Non-prefixed version, currently
                                    supported by Chrome, Edge, Opera and Firefox */
}
.imagebutton .input-wrapper {
    position: relative;
    pointer-events: none;
}
.imagebutton > *,
.imagebutton .input-wrapper > input {
    pointer-events: auto;
}
.imagebutton input[type="button"] {
    padding: .5em;
    background: var(--bg);
    color: var(--ink);
}

.imagebutton input {
    border: 1px dotted transparent;
    cursor: pointer;
}
.imagebutton.no-actions input,
body.phase-ended .imagebutton input {
    cursor: grab;
}
body.phase-ended .actions-menu {
    display: none;
}
.imagebutton:not(.no-actions) input:focus,
.imagebutton input:hover {
    border-color: var(--ink);
}
.imagebutton.selected input,
.imagebutton:has(button.locked) input {
    border: 1px solid var(--ink);
}

.imagebutton .tags-container,
.imagebutton .actions-menu {
    visibility: hidden;
    pointer-events: none;
}
.actions-menu em {
    font-style: normal;
    font-weight: bold;
}
.imagebutton:has(input:hover) .tags-container,
.imagebutton.selected .tags-container,
.imagebutton.selected .actions-menu,
.imagebutton:has(button.locked) .tags-container,
.imagebutton:has(button.locked) .actions-menu {
    visibility: visible;
    pointer-events: auto;
}

.imagebutton.overpowered > input {
    border: 1px solid red !important;
}

.label {
    position: absolute;
    background: var(--ink);
    color: var(--lightgray);
    margin: .5em;
    padding: .5em;
    z-index: 11;
    pointer-events: none;
}

.actions-menu .label {
    width: 10em;
    text-align: left;
}

.tags-container {
    display: flex;
    gap: .5em;
    margin-bottom: .5em;
}
.tags-container .tag {
    display: inline-block;
    border: 1px solid var(--ink);
    border-radius: 2px;
    padding: .2em .5em;
}

.actions-menu {
    position: absolute;
    top: 100%;
    margin-top: .5em;
    display: flex;
    flex-direction: column;
    gap: .5em;
}
.actions-menu button {
    width: fit-content;
    white-space: pre;
    text-align: left;
}
.actions-menu button.selected {
    background: var(--ink);
    color: var(--bg);
}
button.locked {
    background: var(--wait);
}
.actions-menu:has(button.selected),
.actions-menu:has(button.locked) {
    visibility: visible;
    pointer-events: auto;
}

.stats {
    position: absolute;
    top: -.25em;
    left: 0;
    translate: 0 -100%;
    pointer-events: none;
}
.stats > div {
    display: flex;
    margin-bottom: .25em;
}
.stats img {
    width: 1em;
    height: 1em;
}
.stats img.empty,
.stats img.decrement {
    opacity: .2;
    filter: grayscale(100%);
}

.stats img.decrement {
    animation: blank 1s linear;
}
@keyframes blank {
    0% { }
}

.overpowered .stats {
    display: none;
}

.stats .strength,
.stats .windup {
    display: inline-block;
    width: fit-content;
}
.stats .strength {
    pointer-events: auto;
}
.stats .label {
    white-space: pre;
}

body.solo-phase .stats {
    display: none;
}
body.solo-phase .imagebutton.selected .stats {
    display: block;
}

/* dialogue */

.dialogue-container {
    position: absolute;
    z-index: 10;
    width: max-content;
    white-space: nowrap;
}

.dialogue {
    border: 1px solid var(--ink);
    background: var(--bg);
    padding: .5em;
    position: absolute;
    cursor: default;
}

.dialogue.arrow-left {
    top: .5em;
    left: -2em;
}

.dialogue.arrow-right {
    top: .5em;
    right: -2em;
}

.dialogue.arrow-left:after,
.dialogue.arrow-right:after,
.dialogue.arrow-left:before,
.dialogue.arrow-right:before {
    content: "";
    position: absolute;
    top: 100%;
    width: .5em;
    height: .5em;
    background: var(--bg);
    rotate: 45deg;
    translate: 0 -50%;
    z-index: 10;
}
.dialogue.arrow-left:before,
.dialogue.arrow-right:before {
    background: var(--ink);
    translate: 0 calc(-50% + 1px);
    z-index: 9;
}
.dialogue.arrow-right:after,
.dialogue.arrow-right:before {
    right: .5em;
}
.dialogue.arrow-left:after,
.dialogue.arrow-left:before {
    left: .5em;
}

/*  */

.form {
    padding: .5em;
    border: 1px solid var(--ink);
    background: var(--bg);
    max-width: 300px;
    position: absolute;
    
    display: flex;
    flex-direction: column;
    gap: .5em;

    z-index: 10;
}

#match-form {
    left: 50%;
    top: 50%;
    translate: -50% -50%;
}

#waiting-for-response {
    display: none;
}
body.waiting #waiting-for-response {
    display: block;
}
body.waiting:has(#no-opponent:not(.gone)) #waiting-for-response {
    display: none;
}

/* ui */

#ui-container {
    font-family: monospace;
}

#ui-container > * {
    padding: .5em;
    background: var(--ink);
    color: var(--lightgray);
}

#ui-container button {
    background: var(--ink);
    border-color: var(--lightgray);
    color: var(--bg);
}

/* map */

button.mapbutton {
    opacity: 0;
    pointer-events: none;
    height: 0;
    width: 0;
    position: absolute;
    top: 0;
    left: 0;
}

.maplabel {
    display: block;
    position: absolute;
    translate: -50% -50%;
    pointer-events: none;
    font-family: monospace;
    font-size: .9em;
    white-space: pre;
}

canvas.pointing {
    cursor: pointer;
}

.canvas-container {
    position: relative;
}

.mapgamedata {
    font-family: monospace;
    white-space: pre;
}

.mapgobutton {
    position: absolute;
    translate: -50% calc(-100% - .5em);
    z-index: 9;
}
.mapgobutton .label {
    width: 6em;
    text-align: left;
}

.ui-blink {
    animation: blink 200ms steps(2, end);
}

body.phase-ended .ui-blink {
    animation: blink-red 200ms steps(2, end);
}

@keyframes blink {
    0% {
        background: var(--ink);
        color: var(--bg);
    }
    50% {
        background: var(--bg);
        color: var(--bg);
    }
}

@keyframes blink-red {
    0% {
        background: red;
        color: var(--bg);
    }
    50% {
        background: var(--bg);
        color: var(--ink);
    }
}

.x-button,
#game-log {
    background: var(--lightgray);
    color: var(--ink);
}

#game-log {
    width: 50vw;
    height: 100%;
    min-width: 300px;
    max-width: 400px;
    padding: 1em;
    font-family: monospace;

    box-sizing: border-box;
    overflow: auto;
}
#game-log em {
    font-style: normal;
    font-weight: bold;
}
#game-log > * {
    margin-bottom: 5px;
}
#game-log > div > span {
    display: block;
    width: 100%;
}
#game-log .has-turn-info {
    display: flex;
    width: 100%;
}
#game-log .has-turn-info span:first-child {
    display: block;
    white-space: pre;
    background: inherit;
    padding-right: 1ch;
}
#game-log .has-turn-info span:last-child {
    width: 100%;
}
#game-log .phase-starter {
    margin-top: 1em;
}
#game-log .self {
    background: var(--self);
}
#game-log .opp {
    background: var(--opp);
}

.x-button {
    position: absolute;
    top: 0;
    right: 0;
    font-family: monospace;
    min-width: 3ch;
    height: 3ch;
    padding: 0 .5ch;
    text-align: center;
    line-height: 3ch;
}

/* pockets */

#pockets {
    z-index: 1000;
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background: color-mix(in srgb, transparent 30%, var(--bg) 70%);
    backdrop-filter: blur(3px);
    /* color: var(--bg); */
}

#pockets > span {
    display: block;
    font-family: monospace;
    width: 100%;
    text-align: center;
    margin-top: 1em;
}

body.phase-ended #pockets {
    display: none;
}

/* global */

.gone {
    display: none !important;
}

.monospace {
    font-family: monospace;
}

.input-wrapper {
    display: flex;
    width: max-content;
}
.input-wrapper input[type="image"],
.input-wrapper img {
    width: 20%;
}