html, body {
    margin: 0;
}

:root {
    --bg: #fdfdfd;
    --ink: #292a2b;

    --self: rgb(164 207 226);
    --opp: rgb(255 175 110);
    --overpowered: red;

    --wait: var(--self);
    --lightgray: rgb(238, 238, 238);
}

body {
    background: var(--bg);
    /* background: radial-gradient(circle at center, var(--bg), var(--self) 100%); */
    color: var(--ink);
    overflow: hidden;
}

body.dragging, body.dragging * {
    cursor: grabbing !important;
}

/* timer and background effects */

#fixed-background,
#timer-background {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    pointer-events: none;
}

body.hit #fixed-background {
    border-top: 1px solid red;
    border-bottom: 1px solid red;
}

body.timer-active #timer-background {
    top: unset;
    background: var(--wait);
    opacity: .3;
}

/* default tags */

input {
    font-family: inherit;
    font-size: inherit;
}

input[type="text"] { /* used in lobby */
    border: none;
    border-bottom: 1px dotted var(--ink);
    background: var(--bg);
    border-radius: 0;
}
input[type="text"]:focus {
    border-bottom-style: solid;
}
input[type="text"]::placeholder {
    font-style: italic;
}

button {
    font-family: inherit;
    font-size: inherit;
    background-color: var(--bg);
    color: var(--ink);
    border: 1px dotted var(--ink);
    border-radius: 0;
    margin: 0;
    padding: 5px 10px;
    position: relative;

    cursor: pointer;

    -webkit-touch-callout: none; /* iOS Safari */
      -webkit-user-select: none; /* Safari */
       -khtml-user-select: none; /* Konqueror HTML */
         -moz-user-select: none; /* Old versions of Firefox */
          -ms-user-select: none; /* Internet Explorer/Edge */
              user-select: none; /* Non-prefixed version, currently
                                    supported by Chrome, Edge, Opera and Firefox */
}

button:active,
button.locked,
button:disabled {
    border-style: solid;
}

button.locked,
button:disabled {
    cursor: default;
}

button:disabled {
    border-color: gray;
    color: gray;
    font-style: italic;
}

button.locked {
    background: var(--wait);
}

em {
    font-style: inherit;
    font-weight: bold;
}

/* imagebutton */

#things {
    overflow: hidden;
}

.imagebutton {
    position: absolute;
    display: flex;
    flex-direction: column;
    gap: 5px;
    pointer-events: none;

    -webkit-backface-visibility: hidden;
    -webkit-transform: translate3d(0,0,0);
    -webkit-transform: translateZ(0);
    backface-visibility: hidden;
    transform: translate3d(0,0,0);
    transform: translateZ(0);

    translate: -50% -50%;

    -webkit-touch-callout: none; /* iOS Safari */
      -webkit-user-select: none; /* Safari */
       -khtml-user-select: none; /* Konqueror HTML */
         -moz-user-select: none; /* Old versions of Firefox */
          -ms-user-select: none; /* Internet Explorer/Edge */
              user-select: none; /* Non-prefixed version, currently
                                    supported by Chrome, Edge, Opera and Firefox */
}

.imagebutton.character.hit .input-wrapper input {
    border: 1px solid red;
}

.imagebutton > span {
    font-style: italic;
    white-space: pre;
}

.imagebutton.ghost {
    filter: grayscale(100%);
    opacity: .2;
}

.imagebutton.ghost .overhead {
    visibility: hidden;
}

.input-wrapper {
    position: relative;
    pointer-events: none;
    display: flex;
    width: max-content;
}
.input-wrapper input {
    z-index: -1;
}
.input-wrapper input,
.imagebutton canvas,
.imagebutton button {
    pointer-events: auto;
}
.input-wrapper input[type="image"],
.input-wrapper img {
    width: 20%;
}

input[type="image"] {
    width: auto;
    height: auto;
}

.imagebutton input[type="button"] { /* text imagebuttons */
    padding: .5em;
    background: var(--bg);
    color: var(--ink);
}

.imagebutton input {
    cursor: pointer;
}

.imagebutton input,
.imagebutton canvas {
    border: 1px dotted transparent;
}

body.phase-ended .imagebutton canvas {
    border: 1px solid var(--wait);
}

body.actions-disabled .imagebutton input,
.imagebutton canvas,
.imagebutton.no-actions input,
body.phase-ended .imagebutton input,
body.overpowered .imagebutton:not(.character) input {
    cursor: grab;
}

body.phase-ended .actions-menu,
body.overpowered .imagebutton:not(.character) .actions-menu {
    visibility: hidden;
}

body:not(.phase-ended):not(.overpowered) .imagebutton:not(.no-actions) input:focus,
body.overpowered .imagebutton.character:not(.no-actions) input:focus,
.imagebutton input:hover,
.imagebutton canvas:hover {
    border-color: var(--ink);
}

body:not(.phase-ended):not(.overpowered) .imagebutton.selected input,
body:not(.phase-ended):not(.overpowered) .imagebutton:has(button.locked) input,
body:not(.phase-ended):not(.overpowered) .imagebutton canvas.selected,
body.overpowered .imagebutton.character.selected input,
body.overpowered .imagebutton.character:has(button.locked) input {
    border: 1px solid var(--ink);
}

.imagebutton.overpowered:not(.ghost) input {
    border: 1px solid var(--overpowered) !important;
}

.imagebutton .actions-menu {
    visibility: hidden;
    pointer-events: none;
}

.imagebutton:has(input:hover) .tags-container,
.imagebutton.selected .tags-container,
.imagebutton.selected .actions-menu,
.actions-menu:has(button.matchmaking) {
    visibility: visible;
    pointer-events: auto;
}

#tooltip {
    position: absolute;
    background: var(--ink);
    color: var(--lightgray);
    margin: .5em;
    padding: 5px 10px;
    z-index: 200;
    pointer-events: none;
    text-align: left;
    white-space: pre;
}
#tooltip.ghost {
    background: color-mix(in srgb, var(--bg) 80%, var(--ink) 20%);
    color: var(--bg);
}
#tooltip.bottom-of-screen {
    translate: 0 -100%;
}

.tags-container {
    display: flex;
    gap: .5em;
}
.tags-container .tag {
    display: inline-block;
    /* border: 1px solid var(--ink);
    border-radius: 2px;
    padding: .2em .5em;
    background: var(--bg); */
    /* font-style: italic; */
    white-space: pre;
    font-family: sans-serif;
    font-size: .85em;
}

.actions-menu {
    height: 0;
    overflow: visible;
    /* position: absolute; */
    /* top: 100%; */
    /* margin-top: 5px; */
    gap: 5px;
    display: flex;
    flex-direction: column;
}
.actions-menu em {
    font-weight: normal;
    text-decoration: underline;
}
.actions-menu button {
    width: fit-content;
    white-space: pre;
    text-align: left;
}
.actions-menu button.matchmaking {
    background: var(--opp);
}

.overhead {
    /* position: absolute; */
    /* top: 0; */
    /* left: 0; */
    /* translate: 0 -100%; */
    pointer-events: none;
}

.stats {
    width: max-content;
    pointer-events: none;
    padding-bottom: 5px;
}
.stats > div {
    display: flex;
}
.stats img {
    width: 1em;
    height: 1em;
}
.stats img.empty,
.stats img.decrement {
    opacity: .2;
    filter: grayscale(100%);
}

.stats img.decrement {
    animation: blank 1s linear;
}
@keyframes blank {
    0% { }
}

.stats .strength,
.stats .windup {
    display: inline-flex;
    width: fit-content;
}
.stats .strength {
    pointer-events: auto;
}

.imagebutton.selected .stats {
    visibility: visible;
}

.imagebutton.overpowered .stats,
body.solo-phase .stats,
.imagebutton.ghost .stats {
    visibility: hidden;
}

/* dialogue */

.dialogue-container {
    position: absolute;
    z-index: 10;
    width: max-content;
    white-space: nowrap;
}

.dialogue {
    border: 1px solid var(--ink);
    background: var(--bg);
    padding: .5em;
    position: absolute;
    cursor: default;
    pointer-events: none;
}

.dialogue:not(.arrow-left):not(.arrow-right) {
    font-family: monospace;
    background-color: var(--self);
}

.dialogue.arrow-left,
.dialogue.arrow-right {
    border-radius: .5em;
}

.dialogue.arrow-left {
    top: .5em;
    left: -2em;
}

.dialogue.arrow-right {
    top: .5em;
    right: -2em;
}

.dialogue.arrow-left:after,
.dialogue.arrow-right:after,
.dialogue.arrow-left:before,
.dialogue.arrow-right:before {
    content: "";
    position: absolute;
    top: 100%;
    width: .5em;
    height: .5em;
    background: var(--bg);
    rotate: 45deg;
    translate: 0 -50%;
    z-index: 10;
}
.dialogue.arrow-left:before,
.dialogue.arrow-right:before {
    background: var(--ink);
    translate: 0 calc(-50% + 1px);
    z-index: 9;
}
.dialogue.arrow-right:after,
.dialogue.arrow-right:before {
    right: .5em;
}
.dialogue.arrow-left:after,
.dialogue.arrow-left:before {
    left: .5em;
}

/* lobby */

.form {
    padding: .5em;
    border: 1px solid var(--ink);
    background: var(--bg);
    max-width: 300px;
    position: absolute;
    
    display: flex;
    flex-direction: column;
    gap: .5em;

    z-index: 10;
}

#match-form {
    left: 50%;
    top: 50%;
    translate: -50% -50%;
}

/* ui */

#ui-container {
    position: relative;
    font-family: monospace;
    z-index: 10;
}

#ui-container > div {
    padding: 1em;
    background: var(--ink);
    color: var(--lightgray);
}

#ui-container button {
    background: var(--ink);
    border-color: var(--lightgray);
    color: var(--bg);
    vertical-align: middle;
    padding: 0 10px;
}

#ui-container em {
    font-weight: normal;
    font-style: italic;
}

#waiting-for-response {
    display: none;
}
body.waiting #waiting-for-response {
    display: block;
}
body:has(#game-lost:not(.gone)) #no-opponent,
body:has(#game-lost:not(.gone)) #waiting-for-response,
body:has(#disconnected:not(.gone)) #no-opponent,
body:has(#disconnected:not(.gone)) #waiting-for-response,
body:has(#disconnected:not(.gone)) #game-lost,
body.waiting:has(#no-opponent:not(.gone)) #waiting-for-response {
    display: none;
}

#ui-container #game-lost,
#ui-container #disconnected {
    background: #d33636;
}

#ui-container > #spectating {
    background: var(--opp);
    color: var(--ink);
    display: none;
}

body.dead #ui-container > #spectating {
    display: block;
}

#gamedata {
    /* background: transparent;
    color: var(--ink); */
    display: block;
    position: absolute;
    bottom: 0;
    /* translate: 0 100%; */
    pointer-events: none;

    font-family: monospace;
    padding: 1em;
}
#gamedata > div {
    pointer-events: auto;
    white-space: pre;
}

/* music player */

#music-player {
    font-family: monospace;
    position: absolute;
    bottom: 0;
    right: 0;
    padding: 1em;
}

#music-player > div {
    display: flex;
    align-items: center;
    gap: 5px;
}

#music-player .song-title {
    display: block;
    text-align: right;
    font-style: italic;
}

#music-player button.play {
    font-size: .7em;
    font-weight: bold;
    padding: 5px 10px;
}
 
 input[type="range"] {
    color: var(--ink);
    --thumb-height: 1em;
    --track-height: 1px;
    --track-color: color-mix(in srgb, var(--ink) 20%, var(--bg) 80%);
    --clip-edges: 1px;

    position: relative;
    background: transparent;
    overflow: hidden;
    cursor: pointer;
 }
 
/* === WebKit specific styles === */
input[type="range"],
input[type="range"]::-webkit-slider-runnable-track,
input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    height: var(--thumb-height);
}

input[type="range"]::-webkit-slider-runnable-track,
input[type="range"]::-webkit-slider-thumb {
    position: relative;
}

input[type="range"]::-webkit-slider-thumb {
    --thumb-radius: calc((var(--thumb-height) * 0.5) - 1px);
    --clip-top: calc((var(--thumb-height) - var(--track-height)) * 0.5 - 0.5px);
    --clip-bottom: calc(var(--thumb-height) - var(--clip-top));
    --clip-further: calc(100% + 1px);
    --box-fill: calc(-100vmax - var(--thumb-width, var(--thumb-height))) 0 0
        100vmax currentColor;

    width: var(--thumb-width, var(--thumb-height));
    background: linear-gradient(currentColor 0 0) scroll no-repeat left center /
        50% calc(var(--track-height) + 1px);
    background-color: currentColor;
    box-shadow: var(--box-fill);
    border-radius: var(--thumb-width, var(--thumb-height));

    clip-path: polygon(
        100% -1px,
        var(--clip-edges) -1px,
        0 var(--clip-top),
        -100vmax var(--clip-top),
        -100vmax var(--clip-bottom),
        0 var(--clip-bottom),
        var(--clip-edges) 100%,
        var(--clip-further) var(--clip-further)
    );
}

input[type="range"]::-webkit-slider-runnable-track {
    background: linear-gradient(var(--track-color) 0 0) scroll no-repeat center /
        100% calc(var(--track-height) + 1px);
}

/* === Firefox specific styles === */
input[type="range"],
input[type="range"]::-moz-range-track,
input[type="range"]::-moz-range-thumb {
    appearance: none;
    height: var(--thumb-height);
}

input[type="range"]::-moz-range-track,
input[type="range"]::-moz-range-thumb,
input[type="range"]::-moz-range-progress {
    background: transparent;
}

input[type="range"]::-moz-range-thumb {
    background: currentColor;
    border: 0;
    width: var(--thumb-width, var(--thumb-height));
    border-radius: var(--thumb-width, var(--thumb-height));
}

input[type="range"]::-moz-range-track {
    width: 100%;
    background: var(--track-color);
}

input[type="range"]::-moz-range-progress {
    appearance: none;
    background: currentColor;
}

input[type="range"]::-moz-range-track,
input[type="range"]::-moz-range-progress {
    height: calc(var(--track-height) + 1px);
    border-radius: var(--track-height);
}

/* map */

canvas.pointing {
    cursor: pointer;
}

.canvas-container {
    position: relative;
}

.mapbutton {
    opacity: 0;
    pointer-events: none;
    height: 0;
    width: 0;
    position: absolute;
    top: 0;
    left: 0;
}

.maplabel {
    display: block;
    position: absolute;
    translate: -50% -50%;
    pointer-events: none;
    font-family: sans-serif;
    font-size: .85em;
    white-space: pre;
}

.mapgobutton {
    position: absolute;
    translate: -50% calc(-100% - .5em);
    z-index: 9;
}

.ui-blink {
    animation: blink 200ms steps(2, end);
}

body.phase-ended .ui-blink {
    animation: blink-red 200ms steps(2, end);
}

@keyframes blink {
    0% {
        background: var(--ink);
        color: var(--bg);
    }
    50% {
        background: var(--bg);
        color: var(--bg);
    }
}

@keyframes blink-red {
    0% {
        background: red;
        color: var(--bg);
    }
    50% {
        background: var(--bg);
        color: var(--ink);
    }
}

/* log */

.x-button {
    position: absolute;
    top: 0;
    right: 0;
    font-family: monospace;
    min-width: 3ch;
    height: 3ch;
    padding: 0 .5ch;
    text-align: center;
    line-height: 3ch;
}

#game-log .x-button,
#game-log {
    background: var(--lightgray);
    color: var(--ink);
}

#game-log {
    width: 50vw;
    height: 100%;
    min-width: 300px;
    max-width: 400px;
    padding: 1em;
    font-family: monospace;

    box-sizing: border-box;
    overflow: auto;
}
#game-log > div {
    margin-bottom: 5px;
}
#game-log > div > span {
    display: block;
    width: 100%;
}
#game-log .has-turn-info {
    display: flex;
    width: 100%;
}
#game-log .has-turn-info span:first-child {
    display: block;
    white-space: pre;
    background: inherit;
    padding-right: 1ch;
}
#game-log .has-turn-info span:last-child {
    width: 100%;
}
#game-log .phase-starter {
    margin-top: 1em;
}
#game-log .self {
    background: var(--self);
}
#game-log .opp {
    background: var(--opp);
}

/* pockets */

#pockets {
    z-index: 100;
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background: color-mix(in srgb, transparent 30%, var(--bg) 70%);

    -webkit-backface-visibility: hidden;
    -webkit-transform: translate3d(0,0,0);
    -webkit-transform: translateZ(0);
    backface-visibility: hidden;
    transform: translate3d(0,0,0);
    transform: translateZ(0);
    backdrop-filter: blur(3px);
}
#pockets.opponent {
    background: color-mix(in srgb, transparent 30%, var(--opp) 70%);
}

#pockets > span {
    display: block;
    font-family: monospace;
    width: 100%;
    text-align: center;
    margin-top: 1em;
    pointer-events: none;
}

/* global */

.gone {
    display: none !important;
}

.monospace {
    font-family: monospace;
}

.hidden {
    opacity: 0;
}